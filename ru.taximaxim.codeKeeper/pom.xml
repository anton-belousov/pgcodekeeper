<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ru.taximaxim.codeKeeper</groupId>
  <artifactId>ru.taximaxim.codeKeeper</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
    <module>..</module>
    <module>../product</module>
    <module>../../apgdiff/pom_tycho.xml</module>
    <module>../../com.opcoach.e4.contextExplorer</module>
    <module>../../ru.taximaxim.codekeeper.ui</module>
    <module>../../ru.taximaxim.codekeeper.ui.tests</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <tycho.version>0.21.0</tycho.version>

	<!-- Sonar -->
	<sonar.java.source>1.7</sonar.java.source>
	<!-- Sonar/Reporting settings -->
	<!-- ************************ -->
	<!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile
	because we want to be to able to execute mvn sonar:sonar without passing a profile -->
	<!-- Tells Sonar to use jacoco for coverage results -->
	<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
	<!-- Jacoco version to use -->
	<jacoco.version>0.7.0.201403182114</jacoco.version>
	<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
	<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
	<!-- Don't let Sonar execute tests. We will ask it to Maven -->
	<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
	<!-- The system property jacoco.outputDir needs to be override on the command line
	with an absolute path if you want to merge results from all modules.
	Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :
	mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target
	Note that unfortunately using the following does not work because of
	 
	http://jira.codehaus.org/browse/SONAR-3427:
	 
	<jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>
	-->
	<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
	<!-- Jacoco output file for UTs -->
	<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
	<!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
	<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
	<!-- Jacoco output file for ITs -->
	<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
	<!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
	<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
  </properties>
  <profiles>
	  <profile>
	  <id>jenkins</id>
	  <build>
	    <plugins>
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-surefire-plugin</artifactId>
	        <version>2.17</version>
	        <configuration>
	          <argLine>${jacoco.agent.ut.arg}</argLine>
	          <!-- Specific to generate mapping between tests and covered code -->
	          <properties>
	            <property>
	              <name>listener</name>
	              <value>org.sonar.java.jacoco.JUnitListener</value>
	            </property>
	          </properties>
	        </configuration>
	      </plugin>
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-failsafe-plugin</artifactId>
	        <version>2.17</version>
	        <configuration>
	          <argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}</argLine>
	          <!-- Specific to generate mapping between tests and covered code -->
	          <properties>
	            <property>
	              <name>listener</name>
	              <value>org.sonar.java.jacoco.JUnitListener</value>
	            </property>
	          </properties>
	          <!-- Let's put failsafe reports with surefire to have access to tests failures/success reports in sonar -->
	          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
	        </configuration>
	      </plugin>
	      <plugin>
	        <groupId>org.jacoco</groupId>
	        <artifactId>jacoco-maven-plugin</artifactId>
	        <version>${jacoco.version}</version>
	        <executions>
	          <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code
	being tested. -->
	          <execution>
	            <id>prepare-ut-agent</id>
	            <phase>process-test-classes</phase>
	            <goals>
	              <goal>prepare-agent</goal>
	            </goals>
	            <configuration>
	              <destFile>${sonar.jacoco.reportPath}</destFile>
	              <propertyName>jacoco.agent.ut.arg</propertyName>
	              <append>true</append>
	            </configuration>
	          </execution>
	          <!-- Prepares a variable, jacoco.agent.it.arg, that contains the info to be passed to the JVM hosting the code
	being tested. -->
	          <execution>
	            <id>prepare-it-agent</id>
	            <phase>pre-integration-test</phase>
	            <goals>
	              <goal>prepare-agent</goal>
	            </goals>
	            <configuration>
	              <destFile>${sonar.jacoco.itReportPath}</destFile>
	              <propertyName>jacoco.agent.it.arg</propertyName>
	              <append>true</append>
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
	    </plugins>
	  </build>
	  <dependencies>
	    <dependency>
	      <groupId>org.codehaus.sonar-plugins.java</groupId>
	      <artifactId>sonar-jacoco-listeners</artifactId>
	      <version>${sonar-jacoco-listeners.version}</version>
	      <scope>test</scope>
	    </dependency>
	  </dependencies>
	</profile>
</profiles>
  <dependencies>
        <dependency>
	        <groupId>org.jgrapht</groupId>
	        <artifactId>jgrapht-core</artifactId>
	        <version>0.9.0</version>
        </dependency>
        
        <dependency>
        	<groupId>org.mockito</groupId>
        	<artifactId>mockito-all</artifactId>
        	<version>1.9.5</version>
        </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
          <groupId>org.eclipse.tycho</groupId>
          <artifactId>tycho-compiler-plugin</artifactId>
          <version>${tycho.version}</version>
          <configuration>
              <source>1.7</source>
              <target>1.7</target>
          </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-maven-plugin</artifactId>
        <version>${tycho.version}</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
    	<groupId>org.eclipse.tycho</groupId>
    	<artifactId>target-platform-configuration</artifactId>
    	<version>${tycho.version}</version>
    	<configuration>
          	<resolver>p2</resolver>
              <target>
                <artifact>
                  <groupId>ru.taximaxim.codeKeeper</groupId>
                  <artifactId>ru.taximaxim.codeKeeper</artifactId>
                  <version>0.0.1-SNAPSHOT</version>
                  <classifier>../app</classifier>
                </artifact>
              </target>
          	<pomDependencies>consider</pomDependencies>
          	<environments>
            	<environment>
              	   <os>linux</os>
              	   <ws>gtk</ws>
              	   <arch>x86</arch>
            	</environment>
            	<environment>
              	   <os>linux</os>
              	   <ws>gtk</ws>
              	   <arch>x86_64</arch>
            	</environment>
            	<environment>
              	   <os>win32</os>
              	   <ws>win32</ws>
              	   <arch>x86</arch>
            	</environment>
                <environment>
              	   <os>win32</os>
              	   <ws>win32</ws>
              	   <arch>x86_64</arch>
            	</environment>
          	</environments>
    	</configuration>
  	  </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.1</version>
            <executions>
                <execution>
                    <id>default-deploy</id>
                    <phase>none</phase>
                </execution>
            </executions>
        </plugin>
    </plugins>
  </build>
</project>
