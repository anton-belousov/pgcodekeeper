package cz.startnet.utils.pgdiff.loader;

public interface JdbcQueries {
    String QUERY_TABLES_PER_SCHEMA = 
          "SELECT " 
        + "        subselectColumns.oid::bigint, "
        + "        subselectColumns.relname, "
        + "        subselectColumns.relowner::bigint, "
        + "        subselectColumns.aclArray, "
        + "        subselectColumns.col_numbers, "
        + "        subselectColumns.col_names, "
        + "        subselectColumns.col_types::bigint[], "
        + "        subselectColumns.col_defaults,"
        + "        subselectColumns.col_comments, "
        + "        subselectColumns.col_typemod, "
        + "        subselectColumns.col_notnull, "
        + "        comments.description AS table_comment, "
        + "        subselectInherits.inherited, "
        + "        subselectColumns.reloptions, "
        + "        array_agg(dep.deptype) AS deptype "
        + "FROM "
        + "        (SELECT "
        + "                 c.oid, "
        + "                 c.relname, "
        + "                 c.relowner::bigint, "
        + "                 c.relacl AS aclArray, "
        + "                 array_agg(attr.attnum)::integer[] AS col_numbers, "
        + "                 array_agg(attr.attname) AS col_names, "
        + "                 array_agg(attr.atttypid)::bigint[] AS col_types, "
        + "                 array_agg(attrdef.adsrc) AS col_defaults, "
        + "                 array_agg(comments.description) AS col_comments, "
        + "                 array_agg(attr.atttypmod) AS col_typemod, "
        + "                 array_agg(attr.attnotnull) AS col_notnull, "
        + "                 c.reloptions "
        + "        FROM "
        + "                 pg_catalog.pg_class c "
        + "                 JOIN pg_catalog.pg_attribute attr "
        + "                 ON c.oid = attr.attrelid "
        + "                 LEFT JOIN pg_catalog.pg_attrdef attrdef "
        + "                 ON attrdef.adnum = attr.attnum AND "
        + "                    attr.attrelid = attrdef.adrelid "
        + "                 LEFT JOIN pg_catalog.pg_description comments "
        + "                 ON comments.objoid = attr.attrelid AND "
        + "                    comments.objsubid = attr.attnum "
        + "        WHERE "
        + "                 c.relnamespace = ? AND "
        + "                 c.relkind = 'r' AND "
        + "                 c.oid = attr.attrelid "
        + "        GROUP BY "
        + "                 c.oid, "
        + "                 c.relname, "
        + "                 c.relowner, "
        + "                 c.relacl, "
        + "                 c.reloptions "
        + "        ) subselectColumns "
        + "        LEFT JOIN pg_catalog.pg_description comments "
        + "        ON comments.objoid = subselectColumns.oid AND "
        + "           comments.objsubid = 0 "
        + "        LEFT JOIN (SELECT "
        + "                         array_agg(subinh.inherits)::text[] AS inherited,"
        + "                         subinh.inhrelid"
        + "                   FROM"
        + "                         (SELECT"
        + "                                 inhrelid,"
        + "                                 inh.inhparent::regclass AS inherits,"
        + "                                 inh.inhseqno"
        + "                          FROM"
        + "                                 pg_catalog.pg_inherits inh"
        + "                          ORDER BY"
        + "                                 inhrelid,"
        + "                                 inh.inhseqno"
        + "                         ) subinh"
        + "                   GROUP BY"
        + "                         subinh.inhrelid"
        + "                  ) subselectInherits "
        + "        ON subselectInherits.inhrelid = subselectColumns.oid "
        + "        JOIN pg_catalog.pg_depend dep "
        + "        ON subselectColumns.oid = dep.objid "
        + "GROUP BY "
        + "        subselectColumns.oid, "
        + "        subselectColumns.relname, "
        + "        subselectColumns.relowner, "
        + "        subselectColumns.aclArray, "
        + "        subselectColumns.col_numbers, "
        + "        subselectColumns.col_names, "
        + "        subselectColumns.col_types, "
        + "        subselectColumns.col_defaults, "
        + "        subselectColumns.col_comments, "
        + "        subselectColumns.col_typemod, "
        + "        subselectColumns.col_notnull, "
        + "        table_comment, "
        + "        inherited, "
        + "        subselectColumns.reloptions";
    
    String QUERY_FUNCTIONS_PER_SCHEMA = 
            "SELECT "
            + "     proname, "
            + "     proowner, "
            + "     prolang, "
            + "     prosrc, "
            + "     pg_get_functiondef(p.oid) AS probody, "
            + "     prorettype, "
            + "     proallargtypes::bigint[], "
            + "     proargmodes, "
            + "     proargnames, "
            + "     pg_get_function_arguments(p.oid) AS proarguments, "
            + "     pg_get_function_identity_arguments(p.oid) AS proarguments_without_default, "
            + "     proargdefaults, "
            + "     proacl AS aclArray,"
            + "     d.description AS comment,"
            + "     proretset, "
            + "     array_agg(dep.deptype) AS deps "
            + "FROM "
            + "     pg_catalog.pg_proc p "
            + "     LEFT JOIN "
            + "         pg_catalog.pg_description d "
            + "     ON "
            + "         d.objoid = p.oid "
            + "     LEFT JOIN "
            + "         pg_catalog.pg_depend dep "
            + "     ON "
            + "         p.oid = dep.objid "
            + "WHERE "
            + "     pronamespace = ? AND "
            + "     proisagg = FALSE "
            + "GROUP BY "
            + "     p.oid, "
            + "     proname, "
            + "     proowner, "
            + "     prolang, "
            + "     prosrc, "
            + "     probody, "
            + "     prorettype, "
            + "     proowner, "
            + "     proallargtypes, "
            + "     proargmodes, "
            + "     proargnames, "
            + "     proarguments, "
            + "     proargdefaults,"
            + "     comment,"
            + "     aclArray,"
            + "     proretset";
    
    String QUERY_SEQUENCES_PER_SCHEMA = 
            "SELECT "
            + "     c.oid AS sequence_oid,"
            + "     c.relowner,"
            + "     s.sequence_name,"
            + "     s.start_value,"
            + "     s.minimum_value,"
            + "     s.maximum_value,"
            + "     s.increment,"
            + "     s.cycle_option,"
            + "     d.refobjsubid AS referenced_column,"
            + "     d.refobjid AS referenced_table_oid,"
            + "     (SELECT relname FROM pg_catalog.pg_class WHERE oid = d.refobjid AND relkind = 'r') referenced_table_name,"
            + "     c.relacl AS aclArray "
            + "FROM "
            + "     information_schema.sequences s,"
            + "     pg_catalog.pg_class c,"
            + "     pg_catalog.pg_namespace n,"
            + "     pg_catalog.pg_depend d "
            + "WHERE "
            + "     s.sequence_schema = ? AND "
            + "     c.relname = s.sequence_name AND "
            + "     n.oid = c.relnamespace AND "
            + "     d.objid = c.oid AND "
            + "     n.nspname = s.sequence_schema "
            + "GROUP BY "
            + "     sequence_oid,"
            + "     relowner,"
            + "     sequence_name,"
            + "     start_value,"
            + "     minimum_value,"
            + "     maximum_value,"
            + "     increment,"
            + "     cycle_option,"
            + "     referenced_column,"
            + "     referenced_table_oid,"
            + "     referenced_table_name,"
            + "     aclArray "
            + "ORDER BY "
            + "     sequence_oid";
    
    String QUERY_INDEX = 
            "SELECT "
            + "     i.indisunique, "
            + "     c.relname, "
            + "     c.relnamespace, "
            + "     c.relowner, "
            + "     definition "
            + "FROM "
            + "     pg_catalog.pg_index i "
            + "     JOIN pg_catalog.pg_class c ON c.oid = i.indexrelid"
            + "     LEFT JOIN pg_catalog.pg_constraint cons ON cons.conindid = i.indexrelid, "
            + "     pg_get_indexdef(c.oid) definition "
            + "WHERE "
            + "     i.indrelid = ? AND "
            + "     i.indisprimary = FALSE AND "
            + "     i.indisexclusion = FALSE AND"
            + "     cons.conindid is NULL";
    
    String QUERY_TABLE_CONSTRAINTS = 
            "SELECT "
            + "     conname, "
            + "     contype, "
            + "     conrelid, "
            + "     consrc, "
            + "     CAST(conkey as integer[]), "
            + "     confrelid, "
            + "     CAST(confkey as integer[]), "
            + "     confupdtype, "
            + "     confdeltype, "
            + "     confmatchtype, "
            + "     description "
            + "FROM "
            + "     pg_catalog.pg_constraint c "
            + "     LEFT JOIN "
            + "         pg_catalog.pg_description d "
            + "     ON "
            + "         c.oid = d.objoid "
            + "WHERE "
            + "     conrelid = ?";
    
    String QUERY_COLUMNS_PER_SCHEMA = 
            "SELECT "
            + "     a.attname, "
            + "     a.attnum, "
            + "     a.attrelid "
            + "FROM "
            + "     pg_catalog.pg_attribute a "
            + "     JOIN "
            + "         pg_catalog.pg_class c "
            + "     ON "
            + "         c.oid = a.attrelid "
            + "WHERE "
            + "     c.relnamespace = ? AND "
            + "     c.relkind IN ('i', 'r') "
            + "ORDER BY "
            + "     a.attrelid";
    
    String QUERY_EXTENSIONS = 
            "SELECT "
            + "     e.*, "
            + "     d.description "
            + "FROM "
            + "     pg_catalog.pg_extension e "
            + "     LEFT JOIN "
            + "         pg_catalog.pg_description d "
            + "     ON "
            + "         e.oid = d.objoid";
    
    String QUERY_SCHEMAS = 
            "SELECT "
            + "     n.oid::bigint, "
            + "     n.nspname, "
            + "     n.nspacl, "
            + "     r.rolname AS owner, "
            + "     d.description AS comment "
            + "FROM "
            + "     pg_catalog.pg_namespace n "
            + "     JOIN "
            + "         pg_catalog.pg_roles r "
            + "     ON "
            + "         n.nspowner = r.oid AND "
            + "         n.nspname NOT LIKE ('pg_%') AND "
            + "         n.nspname != 'information_schema'"
            + "     LEFT JOIN "
            + "         pg_catalog.pg_description d "
            + "     ON "
            + "         n.oid = d.objoid";
    
    String QUERY_TRIGGERS_PER_TABLE = 
            "SELECT "
            + "     tgfoid, "
            + "     tgname, "
            + "     tgfoid, "
            + "     tgtype, "
            + "     tgrelid "
            + "FROM "
            + "     pg_catalog.pg_trigger "
            + "WHERE "
            + "     tgrelid = ? AND "
            + "     tgisinternal = FALSE";

    String QUERY_VIEWS_PER_SCHEMA = 
            "SELECT "
            + "     relname, "
            + "     relowner::bigint, "
            + "     pg_get_viewdef(c.oid) AS definition, "
            + "     d.description AS comment, "
            + "     array_agg(dep.deptype) AS deptype "
            + "FROM "
            + "     pg_catalog.pg_class c "
            + "     LEFT JOIN "
            + "         pg_catalog.pg_description d "
            + "     ON "
            + "         c.oid = d.objoid "
            + "     LEFT JOIN "
            + "         pg_catalog.pg_depend dep"
            + "     ON "
            + "         dep.objid = c.oid "
            + "WHERE "
            + "     relkind = 'v' AND "
            + "     relnamespace = ? "
            + "GROUP BY "
            + "     relname, "
            + "     relowner, "
            + "     definition, "
            + "     comment";
}
