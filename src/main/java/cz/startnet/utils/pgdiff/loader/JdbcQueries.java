package cz.startnet.utils.pgdiff.loader;

public interface JdbcQueries {
    String QUERY_TABLES_PER_SCHEMA = 
            "SELECT "
            + "     c.oid, "
            + "     c.relname, "
            + "     c.relowner::bigint, "
            + "     c.relacl AS aclArray, "
            + "     array_agg(attributes.attnum)::integer[] AS col_numbers, "
            + "     array_agg(attributes.attname) AS col_names, "
            + "     array_agg(attributes.atttypid)::bigint[] AS col_types, "
            + "     array_agg(attributes.adsrc) AS col_defaults, "
            + "     array_agg(attributes.description) AS col_comments, "
            + "     array_agg(attributes.atttypmod) AS col_typemod, "
            + "     array_agg(attributes.attnotnull) AS col_notnull, "
            + "     comments.description AS table_comment,"
            + "     c2.relname AS inherited, "
            + "     c.reloptions "
            + "FROM "
            + "     pg_catalog.pg_class c "
            
            + "     RIGHT JOIN "
            + "         (pg_catalog.pg_attribute attr "
            + "         LEFT JOIN "
            + "             pg_catalog.pg_attrdef attrdef "
            + "         ON "
            + "             attrdef.adnum = attr.attnum AND "
            + "             attr.attrelid = attrdef.adrelid "
            + "         LEFT JOIN "
            + "             pg_catalog.pg_description comments "
            + "         ON "
            + "             comments.objoid = attr.attrelid AND "
            + "             comments.objsubid = attr.attnum) attributes "
            + "     ON "
            + "         c.oid = attributes.attrelid "
            
            + "     LEFT JOIN "
            + "         pg_catalog.pg_description comments "
            + "     ON "
            + "         comments.objoid = c.oid AND "
            + "         comments.objsubid = 0 "
            
            + "     LEFT JOIN "
            + "         (pg_catalog.pg_depend d "
            + "         JOIN "
            + "             pg_catalog.pg_class c2 "
            + "         ON "
            + "             d.refobjid = c2.oid)"
            + "     ON "
            + "         d.objid = c.oid "
            + "WHERE "
            + "     c.relnamespace = ? AND "
            + "     c.relkind = 'r' "
            + "GROUP BY "
            + "     c.oid, "
            + "     c.relname, "
            + "     c.relowner, "
            + "     aclArray, "
            + "     table_comment, "
            + "     inherited, "
            + "     c.reloptions "
            + "ORDER BY"
            + "     c.oid, "
            + "     inherited";
    
    String QUERY_FUNCTIONS_PER_SCHEMA = 
            "SELECT "
            + "     proname, "
            + "     proowner, "
            + "     prolang, "
            + "     prosrc, "
            + "     pg_get_functiondef(p.oid) AS probody, "
            + "     prorettype, "
            + "     proallargtypes::bigint[], "
            + "     proargmodes, "
            + "     proargnames, "
            + "     pg_get_function_arguments(p.oid) AS proarguments, "
            + "     pg_get_function_identity_arguments(p.oid) AS proarguments_without_default, "
            + "     proargdefaults, "
            + "     proacl AS aclArray,"
            + "     d.description AS comment,"
            + "     proretset "
            + "FROM "
            + "     pg_catalog.pg_proc p LEFT JOIN pg_catalog.pg_description d ON d.objoid = p.oid "
            + "WHERE "
            + "     pronamespace = ? AND "
            + "     proisagg = FALSE "
            + "GROUP BY "
            + "     p.oid, "
            + "     proname, "
            + "     proowner, "
            + "     prolang, "
            + "     prosrc, "
            + "     probody, "
            + "     prorettype, "
            + "     proowner, "
            + "     proallargtypes, "
            + "     proargmodes, "
            + "     proargnames, "
            + "     proarguments, "
            + "     proargdefaults,"
            + "     comment,"
            + "     aclArray,"
            + "     proretset";
    
    String QUERY_SEQUENCES_PER_SCHEMA = 
            "SELECT "
            + "     c.oid AS sequence_oid,"
            + "     c.relowner,"
            + "     s.sequence_name,"
            + "     s.start_value,"
            + "     s.minimum_value,"
            + "     s.maximum_value,"
            + "     s.increment,"
            + "     s.cycle_option,"
            + "     d.refobjsubid AS referenced_column,"
            + "     d.refobjid AS referenced_table_oid,"
            + "     (SELECT relname FROM pg_catalog.pg_class WHERE oid = d.refobjid AND relkind = 'r') referenced_table_name,"
            + "     c.relacl AS aclArray "
            + "FROM "
            + "     information_schema.sequences s,"
            + "     pg_catalog.pg_class c,"
            + "     pg_catalog.pg_namespace n,"
            + "     pg_catalog.pg_depend d "
            + "WHERE "
            + "     s.sequence_schema = ? AND "
            + "     c.relname = s.sequence_name AND "
            + "     n.oid = c.relnamespace AND "
            + "     d.objid = c.oid AND "
            + "     n.nspname = s.sequence_schema "
            + "GROUP BY "
            + "     sequence_oid,"
            + "     relowner,"
            + "     sequence_name,"
            + "     start_value,"
            + "     minimum_value,"
            + "     maximum_value,"
            + "     increment,"
            + "     cycle_option,"
            + "     referenced_column,"
            + "     referenced_table_oid,"
            + "     referenced_table_name,"
            + "     aclArray "
            + "ORDER BY "
            + "     sequence_oid";
    
    String QUERY_INDEX = 
            "SELECT "
            + "     i.indisunique, "
            + "     c.relname, "
            + "     c.relnamespace, "
            + "     c.relowner, "
            + "     definition "
            + "FROM "
            + "     pg_catalog.pg_index i, "
            + "     pg_catalog.pg_class c, "
            + "     pg_get_indexdef(c.oid) definition "
            + "WHERE "
            + "     i.indrelid = ? AND "
            + "     c.oid = i.indexrelid";
    
    String QUERY_TABLE_CONSTRAINTS = 
            "SELECT "
            + "     conname, "
            + "     contype, "
            + "     conrelid, "
            + "     consrc, "
            + "     CAST(conkey as integer[]), "
            + "     confrelid, "
            + "     CAST(confkey as integer[]), "
            + "     confupdtype, "
            + "     confdeltype, "
            + "     confmatchtype "
            + "FROM "
            + "     pg_catalog.pg_constraint "
            + "WHERE "
            + "     conrelid = ?";
    
    String QUERY_COLUMNS_PER_SCHEMA = 
            "SELECT "
            + "     a.attname, "
            + "     a.attnum, "
            + "     a.attrelid "
            + "FROM "
            + "     pg_catalog.pg_attribute a "
            + "     JOIN "
            + "         pg_catalog.pg_class c "
            + "     ON "
            + "         c.oid = a.attrelid "
            + "WHERE "
            + "     c.relnamespace = ? AND "
            + "     c.relkind IN ('i', 'r') "
            + "ORDER BY "
            + "     a.attrelid";
}
